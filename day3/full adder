module fulladder(input a,b,c output sum,carry);
  assign sum = a^b^c;
  assign carry = (a&b)|(b&a)|(c&a);
endmodule

module fulladder_tb;
  reg a,b,c;
  wire sum,carry;
  fulladder dut(.a(a),.b(b),.c(c),.sum(sum),.carry(carry));
                initial begin
                  #10 a=0,b=0,c=0;
                  #10 a=0,b=0,c=1;
                  #10 a=0,b=1,c=0;
                  #10 a=0,b=1,c=1;
                  #10 a=1,b=0,c=0;
                  #10 a=1,b=0,c=1;
                  #10 a=1,b=1,c=0;
                  #10 a=1,b=1,c=1;
                 
                 #30$stop;
                end
  always@(a or b or c)
  $display(input values : a =%b;b=%b;c=%b output 
